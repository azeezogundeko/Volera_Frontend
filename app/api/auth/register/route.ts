import { NextResponse } from 'next/server';

interface RegisterBody {
  email: string;
  password: string;
  firstName: string;
  lastName: string;
  country: string;
}

export async function POST(request: Request) {
  try {
    const body: RegisterBody = await request.json();
    const { email, password, firstName, lastName, country } = body;

    // TODO: Add validation for required fields
    if (!email || !password || !firstName || !lastName || !country) {
      return NextResponse.json(
        { 
          success: false,
          message: 'All fields are required'
        },
        { status: 400 }
      );
    }

    // TODO: Add email format validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return NextResponse.json(
        { 
          success: false,
          message: 'Invalid email format'
        },
        { status: 400 }
      );
    }

    // TODO: Add password strength validation
    if (password.length < 8) {
      return NextResponse.json(
        { 
          success: false,
          message: 'Password must be at least 8 characters long'
        },
        { status: 400 }
      );
    }

    // TODO: Replace this with your actual registration logic
    // For example, using a database call or external auth service
    
    return NextResponse.json({ 
      success: true,
      message: 'Registration successful',
      user: {
        id: '1', // This would normally be generated by your database
        email,
        firstName,
        lastName,
        country
      }
    });

  } catch (error) {
    console.error('Registration error:', error);
    return NextResponse.json(
      { 
        success: false,
        message: 'Registration failed. Please try again.'
      },
      { status: 500 }
    );
  }
}
